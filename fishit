
loadstring(game:HttpGet("https://raw.githubusercontent.com/apezts/Nezha/refs/heads/main/tes%20anti%20afk"))()

local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()
local Window = WindUI:CreateWindow({
    Title = "Philanx Hub",
    Icon = "hand", --Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
    Author = "Philanx",
    Folder = "WindUI_Example",
    NewElements = true,
})
Window:SetToggleKey(Enum.KeyCode.LeftControl)
WindUI:Notify({
    Title = "Philanx Hub",
    Content = "Success to load!",
    Duration = 2, -- 3 seconds
    Icon = "check-line",
})
Window:Tag({
    Title = "Fish It",
    Color = Color3.fromHex("#fbff00")
})
Window:Tag({
    Title = "v0.0.1",
    Color = Color3.fromHex("#0026ff")
})


local General = Window:Tab({
    Title = "General",
    Icon = "person-standing",
    Locked = false,
})
local PlayerSection = General:Section({
    Title = "Player",
    Icon = "person-standing",
    Opened = true,
})
local WalkSpeed = PlayerSection:Slider({
    Title = "Walkspeed",
    Desc = "Make walk Faster",
    Step = 1,
    
    Value = { Min = 16, Max = 120, Default = 16 },
    Callback = function(value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
    end
})
local JumpHeight = PlayerSection:Slider({
    Title = "Jump Height",
    Desc = "Make Jump high!",
    Step = 1,
    
    Value = { Min = 50, Max = 200, Default = 50 },
    Callback = function(value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = value
    end
})
General:Divider()

local Main = Window:Tab({
    Title = "Main",
    Icon = "house",
    Locked = false,
})
local TeleportSection = Main:Section({
    Title = "Teleport",
    Icon = "map-pinned",
    Opened = true,
})
local teleport = nil 
local TeleportDropdown = TeleportSection:Dropdown({
    Title = "Teleport",
    SearchBarEnabled = false,
    MenuWidth = 280,
    Values = { "Coral Reefs","Creater Island","Esoteric Island","Fisherman Island","Kohana","Kohana Lava","Treasure Ruins","Sisyphus Statue","Tropical Grove","Winter Fest" },
    Value = nil,
    Callback = function(option) 
        teleport = option 
    end
})
local TeleportButton = TeleportSection:Button({
    Title = "Teleport",
    Locked = false,
    Callback = function()
        if teleport == "Coral Reefs" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2776.1, 4.0, 2150.8)
        elseif teleport == "Creater Island" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(950.8, 3.6, 5031.6)
        elseif teleport == "Esoteric Island" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1988.4, 5.2, 1391.3)
        elseif teleport == "Fisherman Island" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(34.3, 17.0, 2833.9)
        elseif teleport == "Kohana" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-643.4, 16.0, 620.0)
        elseif teleport == "Kohana Lava" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-654.6, 66.0, 214.7)
        elseif teleport == "Treasure Ruins" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3598.6, -266.6, -1579.4)
        elseif teleport == "Sisyphus Statue" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3694.2, -135.6, -1041.1)
        elseif teleport == "Tropical Grove" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2047.8, 6.3, 3662.9)
        elseif teleport == "Winter Fest" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1621.8, 4.3, 3287.8)
        end
    end
})
-- Fetch all player names
local playerNames = {}
local players = game.Players:GetPlayers()

for _, player in ipairs(players) do
    table.insert(playerNames, player.Name)
end
local nametoteleport = nil
local teleporttoplayerdropdown = TeleportSection:Dropdown({
    Title = "Teleport To Player",
    Values = playerNames,
    Value = playerNames[1] or "No Players",
    Callback = function(option)
        nametoteleport = option
    end
})
local teleporttoplayerbutton = TeleportSection:Button({
    Title = "Teleport",
    Callback = function()
        local targetPlayer = game.Players:FindFirstChild(nametoteleport)
        
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            -- Teleporting your character to the selected player's position
            local targetPosition = targetPlayer.Character.HumanoidRootPart.Position
            local localPlayerRoot = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            
            if localPlayerRoot then
                localPlayerRoot.CFrame = CFrame.new(targetPosition)
            end
        end
    end
})
Main:Divider()

local AutoSection = Main:Section({
    Title = "Automatic",
    Icon = "play",
    Opened = true,
})

local isautofishing = nil
local autofishing = AutoSection:Toggle({
    Title = "Auto Fishing",
    Desc = "Use this when using astral rod or above",
    Icon = "check",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
        isautofishing = state
        if isautofishing then
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RE/EquipToolFromHotbar"):FireServer(1)
            task.wait(1)
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/ChargeFishingRod"):InvokeServer(1758965381.937731)
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/RequestFishingMinigameStarted"):InvokeServer(-1.5718746185302734, 1.9918503185920771)
            task.wait(0.5)
            while isautofishing do
                game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RE/FishingCompleted"):FireServer()
                task.wait(0.1)
                game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/ChargeFishingRod"):InvokeServer(1758965381.937731)
                game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/RequestFishingMinigameStarted"):InvokeServer(-1.5718746185302734, 1.9918503185920771)
                task.wait(1)
            end
        end
    end
})

local isautofishingsteampunk = nil
local autofishingsteampunk = AutoSection:Toggle({
    Title = "Auto Fishing",
    Desc = "Use this when using lower astral rod",
    Icon = "check",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
        isautofishingsteampunk = state
        if isautofishingsteampunk then
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RE/EquipToolFromHotbar"):FireServer(1)
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/UpdateAutoFishingState"):InvokeServer(true)
            while isautofishingsteampunk do
                task.wait(0.5)
                game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RE/FishingCompleted"):FireServer()
            end
        elseif isautofishingsteampunk == false then
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/UpdateAutoFishingState"):InvokeServer(false)
        end
    end
})

local stuckfarming = AutoSection:Button({
    Title = "Reset",
    Desc = "Click this if autofarm getting stuck",
    Locked = false,
    Callback = function()
        game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/CancelFishingInputs"):InvokeServer()
    end
})

local islegendaryfish = nil
local legendaryfish = AutoSection:Toggle({
    Title = "auto cast",
    Locked = true,
    Callback = function(state)
        islegendaryfish = state
        if islegendaryfish then
            while islegendaryfish do
                game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/ChargeFishingRod"):InvokeServer(1758965381.937731)
                game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/RequestFishingMinigameStarted"):InvokeServer(-0.5718746185302734, 0.9918503185920771)
                task.wait(3)
            end
        end
    end
})
local claimfish = AutoSection:Button({
    Title = "Claim",
    Locked = true,
    Callback = function()
        game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RE/FishingCompleted"):FireServer()
    end
})

local timersell = nil
local sell = AutoSection:Input({
    Title = "Timer for sell",
    Desc = "60 for 60 second",
    Value = "60",
    InputIcon = "timer",
    Type = "Input", -- or "Textarea"
    Placeholder = "Enter text...",
    Callback = function(input) 
        timersell = input
    end
})
local isautosell = nil
local autosell = AutoSection:Toggle({
    Title = "Auto sell",
    Icon = "check",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
        isautosell = state
        if isautosell then
            while isautosell do
                game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/SellAllItems"):InvokeServer()
                wait(timersell)
            end
        end
    end
})
Main:Divider()
local IsRadarOn = false
local RadarOn = Main:Toggle({
    Title = "Fishing Radar",
    Icon = "radar",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        IsRadarOn = state 
        if IsRadarOn then
            WindUI:Notify({
                Title = "Philanx Hub",
                Content = "Oxygen On!",
                Duration = 2, -- 3 seconds
                Icon = "check-line",})
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/UpdateFishingRadar"):InvokeServer(true)
        else
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/UpdateFishingRadar"):InvokeServer(false)
        end
    end
})
local IsOxygenOn = false
local OxygenOn = Main:Toggle({
    Title = "Oxygen",
    Icon = "radar",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        IsOxygenOn = state 
        if IsOxygenOn then
            WindUI:Notify({
                Title = "Philanx Hub",
                Content = "Radar On!",
                Duration = 2, -- 3 seconds
                Icon = "check-line",})
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/EquipOxygenTank"):InvokeServer(105)
        else
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/UnequipOxygenTank"):InvokeServer()
        end
    end
})

local Shop = Window:Tab({
    Title = "Shop",
    Icon = "store",
    Locked = false,
})
local ShopSection = Shop:Section({
    Title = "Shop",
    Icon = "store",
    Opened = true,
})
local BaitId = nil
local BaitShop = ShopSection:Dropdown({
    Title = "Bait Shop",
    Values = { "Topwater Bait","Luck Bait","Midnight Bait","Nature Bait","Chroma Bait","Dark Matter Bait","Corrupt Bait","Aether Bait", },
    Value = nil,
    Callback = function(option) 
        BaitId = option 
    end
})
local BaitShopButton = ShopSection:Button({
    Title = "Buy Bait",
    Locked = false,
    Callback = function()
        if BaitId == "Topwater Bait" then
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/PurchaseBait"):InvokeServer(10)
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RE/EquipBait"):FireServer(10)
        elseif BaitId == "Luck Bait" then
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/PurchaseBait"):InvokeServer(2)
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RE/EquipBait"):FireServer(2)
        elseif BaitId == "Midnight Bait" then
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/PurchaseBait"):InvokeServer(3)
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RE/EquipBait"):FireServer(3)
        elseif BaitId == "Nature Bait" then
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/PurchaseBait"):InvokeServer(17)
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RE/EquipBait"):FireServer(17)
        elseif BaitId == "Chroma Bait" then
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/PurchaseBait"):InvokeServer(6)
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RE/EquipBait"):FireServer(6)
        elseif BaitId == "Dark Matter Bait" then
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/PurchaseBait"):InvokeServer(8)
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RE/EquipBait"):FireServer(8)
        elseif BaitId == "Corrupt Bait" then
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/PurchaseBait"):InvokeServer(15)
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RE/EquipBait"):FireServer(15)
        elseif BaitId == "Aether Bait" then
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/PurchaseBait"):InvokeServer(16)
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RE/EquipBait"):FireServer(16)
        end
    end
})
local rodshopbutton = ShopSection:Button({
    Title = "Rod Shop",
    Callback = function()
    local shoprod = workspace["!!! MENU RINGS"].Ring.ProximityPrompt
    fireproximityprompt(shoprod)
    end
})
Shop:Divider()
local WeatherSection = Shop:Section({
    Title = "Weather",
    Icon = "cloud",
    Opened = true,
})
local WeatherSelect = nil
local WeatherShopdropdown = WeatherSection:Dropdown({
    Title = "Weather Shop",
    Values = { "Wind","Cloudy","Snow","Storm","Radiant","Shark Hunt", },
    Value = nil,
    Callback = function(option) 
        WeatherSelect = option
    end
})
local WeatherShopdropbutton = WeatherSection:Button({
    Title = "Buy Weather",
    Locked = false,
    Callback = function()
        if WeatherSelect == "Wind" then
            Window:Dialog({
                Title = "Price : 10K",
                Content = "Increase Rod Speed",
                Buttons = {
                    {
                        Title = "Buy",
                        Callback = function()
                            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/PurchaseWeatherEvent"):InvokeServer("Wind")
                        end,
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
                            print("Cancelled!")
                        end,
                    },
                }
            })
        elseif WeatherSelect == "Cloudy" then
            Window:Dialog({
                Title = "Price : 20K",
                Content = "Increase luck",
                Buttons = {
                    {
                        Title = "Buy",
                        Callback = function()
                            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/PurchaseWeatherEvent"):InvokeServer("Cloudy")
                        end,
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
                        end,
                    },
                }
            })
        elseif WeatherSelect == "Snow" then
            Window:Dialog({
                Title = "Price : 15K",
                Content = "Adds Frozen Mutations",
                Buttons = {
                    {
                        Title = "Buy",
                        Callback = function()
                            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/PurchaseWeatherEvent"):InvokeServer("Snow")
                        end,
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
                        end,
                    },
                }
            })
        elseif WeatherSelect == "Storm" then
            Window:Dialog({
                Title = "Price : 35K",
                Content = "Increase Rod Speed and Luck",
                Buttons = {
                    {
                        Title = "Buy",
                        Callback = function()
                            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/PurchaseWeatherEvent"):InvokeServer("Storm")
                        end,
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
                        end,
                    },
                }
            })
        elseif WeatherSelect == "Radiant" then
            Window:Dialog({
                Title = "Price : 50K",
                Content = "Increase Shiny Chance",
                Buttons = {
                    {
                        Title = "Buy",
                        Callback = function()
                            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/PurchaseWeatherEvent"):InvokeServer("Radiant")
                        end,
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
                        end,
                    },
                }
            })
        elseif WeatherSelect == "Shark Hunt" then
            Window:Dialog({
                Title = "Price : 300K",
                Content = "Shark Hunt Event",
                Buttons = {
                    {
                        Title = "Buy",
                        Callback = function()
                            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net"):WaitForChild("RF/PurchaseWeatherEvent"):InvokeServer("Shark Hunt")
                        end,
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
                        end,
                    },
                }
            })
        end
    end

})

local AdminEvent = Window:Tab({
    Title = "Admin Event",
    Icon = "rocket",
    Locked = false,
})
local AdminEventSection = AdminEvent:Section({
    Title = "Admin Event",
    Icon = "rocket",
    Opened = true,
})

local AdminEventOption = nil
local AdminEventDropdown = AdminEventSection:Dropdown({
    Title = "Event Hunt",
    Values = { "Shark Hunt", "Ghost Shark Hunt", "Megalodon Hunt",},
    Value = nil,
    Callback = function(option) 
        AdminEventOption = option
    end
})

local AdminEventButton = AdminEventSection:Button({
    Title = "Teleport",
    Locked = false,
    Callback = function()
    local hrp = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
    local menurings = workspace:FindFirstChild("!!! MENU RINGS")
    local props = menurings and menurings:FindFirstChild("Props")
        if AdminEventOption == "Shark Hunt" then
            local sharkHunt = props and props:FindFirstChild("Shark Hunt")

            if sharkHunt then
                print(true) -- ✅ kalau ada Shark Hunt
                
                local boat = sharkHunt:FindFirstChild("Fishing Boat")
                if boat then
                    local part = boat:IsA("Model") and (boat.PrimaryPart or boat:FindFirstChildWhichIsA("BasePart")) or boat
                    if part then
                        hrp.CFrame = part.CFrame + Vector3.new(13, 5, 13)
                    end
                end
            else
                WindUI:Notify({
                Title = "Philanx Hub",
                Content = "Shart Hunt not starting!",
                Duration = 2, -- 3 seconds
                Icon = "x",})
            end
        elseif AdminEventOption == "Ghost Shark Hunt" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(619.2, 6.9, 3789.5)
        elseif AdminEventOption == "Megalodon Hunt" then
            local GhostsharkHunt = props and props:FindFirstChild("Megalodon Hunt")

            if GhostsharkHunt then
                print(true) -- ✅ kalau ada Ghost Shark Hunt
                            
                local boat = GhostsharkHunt:FindFirstChild("Megalodon Hunt")
                if boat then
                    local part = boat:IsA("Model") and (boat.PrimaryPart or boat:FindFirstChildWhichIsA("BasePart")) or boat
                    if part then
                        hrp.CFrame = part.CFrame + Vector3.new(0, 5, 0)
                    end
                end
            end
        else
            WindUI:Notify({
            Title = "Philanx Hub",
            Content = "Shart Hunt not starting!",
            Duration = 2, -- 3 seconds
            Icon = "x",})
        end
    end
})


local tools = Window:Tab({
    Title = "Tools",
    Icon = "tool",
    Locked = false,
})
local TeleportButton = tools:Button({
    Title = "Copy Coordinate",
    Locked = false,
    Callback = function()
        local player = game.Players.LocalPlayer
        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local position = player.Character.HumanoidRootPart.Position
            local formattedPosition = string.format("%.1f, %.1f, %.1f", position.X, position.Y, position.Z)
            setclipboard(formattedPosition)
        end
    end
})
